[0.000000] (-) TimerEvent: {}
[0.000147] (-) JobUnselected: {'identifier': 'cpp_srvcli'}
[0.000193] (-) JobUnselected: {'identifier': 'my_package'}
[0.001730] (-) JobUnselected: {'identifier': 'py_pubsub'}
[0.001752] (-) JobUnselected: {'identifier': 'turtlesim'}
[0.001762] (-) JobUnselected: {'identifier': 'tutorial_interfaces'}
[0.001773] (cpp_pubsub) JobQueued: {'identifier': 'cpp_pubsub', 'dependencies': OrderedDict({'tutorial_interfaces': '/home/liror/ros2_ws/install/tutorial_interfaces'})}
[0.001789] (cpp_pubsub) JobStarted: {'identifier': 'cpp_pubsub'}
[0.011826] (cpp_pubsub) JobProgress: {'identifier': 'cpp_pubsub', 'progress': 'cmake'}
[0.013370] (cpp_pubsub) JobProgress: {'identifier': 'cpp_pubsub', 'progress': 'build'}
[0.013406] (cpp_pubsub) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/liror/ros2_ws/build/cpp_pubsub', '--', '-j2', '-l2'], 'cwd': '/home/liror/ros2_ws/build/cpp_pubsub', 'env': OrderedDict({'LESSOPEN': '| /usr/bin/lesspipe %s', 'USER': 'liror', 'XDG_SESSION_TYPE': 'wayland', 'SHLVL': '1', 'LD_LIBRARY_PATH': '/home/liror/ros2_ws/install/tutorial_interfaces/lib:/home/liror/ros2_ws/install/turtlesim/lib:/opt/ros/jazzy/opt/rviz_ogre_vendor/lib:/opt/ros/jazzy/lib/x86_64-linux-gnu:/opt/ros/jazzy/opt/gz_math_vendor/lib:/opt/ros/jazzy/opt/gz_utils_vendor/lib:/opt/ros/jazzy/opt/gz_cmake_vendor/lib:/opt/ros/jazzy/lib', 'HOME': '/home/liror', 'OLDPWD': '/home/liror/ros2_ws/src/cpp_pubsub', 'DESKTOP_SESSION': 'ubuntu', 'ROS_PYTHON_VERSION': '3', 'GNOME_SHELL_SESSION_MODE': 'ubuntu', 'GTK_MODULES': 'gail:atk-bridge', 'SYSTEMD_EXEC_PID': '1925', 'GSM_SKIP_SSH_AGENT_WORKAROUND': 'true', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/1000/bus', 'COLORTERM': 'truecolor', '_colcon_cd_root': '/opt/ros/jazzy/', 'DEBUGINFOD_URLS': 'https://debuginfod.ubuntu.com', 'IM_CONFIG_PHASE': '1', 'WAYLAND_DISPLAY': 'wayland-0', 'COLCON_PREFIX_PATH': '/home/liror/ros2_ws/install', 'ROS_DISTRO': 'jazzy', 'LOGNAME': 'liror', '_': '/usr/bin/colcon', 'ROS_VERSION': '2', 'MEMORY_PRESSURE_WATCH': '/sys/fs/cgroup/user.slice/user-1000.slice/user@1000.service/session.slice/org.gnome.Shell@wayland.service/memory.pressure', 'XDG_SESSION_CLASS': 'user', 'USERNAME': 'liror', 'TERM': 'xterm-256color', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'PATH': '/opt/ros/jazzy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin', 'SESSION_MANAGER': 'local/ubuntu:@/tmp/.ICE-unix/1891,unix/ubuntu:/tmp/.ICE-unix/1891', 'XDG_MENU_PREFIX': 'gnome-', 'GNOME_TERMINAL_SCREEN': '/org/gnome/Terminal/screen/e5b88ba3_60bf_42eb_a376_b803cb54c2ff', 'GNOME_SETUP_DISPLAY': ':1', 'XDG_RUNTIME_DIR': '/run/user/1000', 'DISPLAY': ':0', 'LANG': 'en_US.UTF-8', 'XDG_CURRENT_DESKTOP': 'ubuntu:GNOME', 'XMODIFIERS': '@im=ibus', 'XDG_SESSION_DESKTOP': 'ubuntu', 'XAUTHORITY': '/run/user/1000/.mutter-Xwaylandauth.SIGR52', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:', 'GNOME_TERMINAL_SERVICE': ':1.136', 'SSH_AUTH_SOCK': '/run/user/1000/keyring/ssh', 'AMENT_PREFIX_PATH': '/home/liror/ros2_ws/install/tutorial_interfaces:/home/liror/ros2_ws/install/turtlesim:/home/liror/ros2_ws/install/py_pubsub:/home/liror/ros2_ws/install/my_package:/home/liror/ros2_ws/install/cpp_srvcli:/home/liror/ros2_ws/install/cpp_pubsub:/opt/ros/jazzy', 'SHELL': '/bin/bash', 'QT_ACCESSIBILITY': '1', 'GDMSESSION': 'ubuntu', 'LESSCLOSE': '/usr/bin/lesspipe %s %s', 'ROS_AUTOMATIC_DISCOVERY_RANGE': 'SUBNET', 'QT_IM_MODULE': 'ibus', 'PWD': '/home/liror/ros2_ws/build/cpp_pubsub', 'XDG_CONFIG_DIRS': '/etc/xdg/xdg-ubuntu:/etc/xdg', 'XDG_DATA_DIRS': '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop', 'PYTHONPATH': '/home/liror/ros2_ws/install/tutorial_interfaces/lib/python3.12/site-packages:/home/liror/ros2_ws/install/turtlesim/lib/python3.12/site-packages:/home/liror/ros2_ws/install/py_pubsub/lib/python3.12/site-packages:/opt/ros/jazzy/lib/python3.12/site-packages', 'COLCON': '1', 'MEMORY_PRESSURE_WRITE': 'c29tZSAyMDAwMDAgMjAwMDAwMAA=', 'VTE_VERSION': '7600', 'CMAKE_PREFIX_PATH': '/home/liror/ros2_ws/install/tutorial_interfaces:/home/liror/ros2_ws/install/turtlesim:/home/liror/ros2_ws/install/my_package:/home/liror/ros2_ws/install/cpp_srvcli:/home/liror/ros2_ws/install/cpp_pubsub:/opt/ros/jazzy/opt/gz_math_vendor:/opt/ros/jazzy/opt/gz_utils_vendor:/opt/ros/jazzy/opt/gz_cmake_vendor:/home/liror/ros2_ws/install/py_pubsub:/opt/ros/jazzy'}), 'shell': False}
[0.068074] (cpp_pubsub) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/talker.dir/src/publisher_lambda_function.cpp.o\x1b[0m\n'}
[0.079243] (cpp_pubsub) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/listener.dir/src/subscriber_lambda.cpp.o\x1b[0m\n'}
[0.100208] (-) TimerEvent: {}
[0.200531] (-) TimerEvent: {}
[0.305310] (-) TimerEvent: {}
[0.410455] (-) TimerEvent: {}
[0.514442] (-) TimerEvent: {}
[0.614836] (-) TimerEvent: {}
[0.716852] (-) TimerEvent: {}
[0.818107] (-) TimerEvent: {}
[0.918467] (-) TimerEvent: {}
[1.021418] (-) TimerEvent: {}
[1.123660] (-) TimerEvent: {}
[1.224019] (-) TimerEvent: {}
[1.328624] (-) TimerEvent: {}
[1.428995] (-) TimerEvent: {}
[1.532197] (-) TimerEvent: {}
[1.636574] (-) TimerEvent: {}
[1.738513] (-) TimerEvent: {}
[1.840650] (-) TimerEvent: {}
[1.940990] (-) TimerEvent: {}
[2.041380] (-) TimerEvent: {}
[2.100241] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/logging.hpp:24\x1b[m\x1b[K,\n'}
[2.100441] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:27\x1b[m\x1b[K,\n'}
[2.100499] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171\x1b[m\x1b[K,\n'}
[2.100547] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/subscriber_lambda.cpp:17\x1b[m\x1b[K:\n'}
[2.100595] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/subscriber_lambda.cpp:\x1b[m\x1b[K In lambda function:\n'}
[2.100641] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/subscriber_lambda.cpp:29:61:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kusing tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr = tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtrWithDeleter<std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kclass std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} has no member named \xe2\x80\x98\x1b[01m\x1b[Knum\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.100701] (cpp_pubsub) StderrLine: {'line': b'   29 |         RCLCPP_INFO(this->get_logger(), "I heard: \'" << msg.\x1b[01;31m\x1b[Knum\x1b[m\x1b[K << "\'");\n'}
[2.100748] (cpp_pubsub) StderrLine: {'line': b'      |                                                             \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[2.141519] (-) TimerEvent: {}
[2.243352] (-) TimerEvent: {}
[2.345342] (-) TimerEvent: {}
[2.359377] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/logging.hpp:24\x1b[m\x1b[K,\n'}
[2.359585] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:27\x1b[m\x1b[K,\n'}
[2.359642] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171\x1b[m\x1b[K,\n'}
[2.359691] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/publisher_lambda_function.cpp:19\x1b[m\x1b[K:\n'}
[2.359739] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/publisher_lambda_function.cpp:\x1b[m\x1b[K In lambda function:\n'}
[2.359788] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/publisher_lambda_function.cpp:40:57:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kinvalid operands of types \xe2\x80\x98\x1b[01m\x1b[Kconst char [14]\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Ktutorial_interfaces::msg::Num_<std::allocator<void> >::_num_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong int\x1b[m\x1b[K\xe2\x80\x99} to binary \xe2\x80\x98\x1b[01m\x1b[Koperator<<\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.359839] (cpp_pubsub) StderrLine: {'line': b'   40 |         RCLCPP_INFO(this->get_logger(), \x1b[32m\x1b[K"Publishing: \'"\x1b[m\x1b[K \x1b[01;31m\x1b[K<<\x1b[m\x1b[K \x1b[34m\x1b[Kmessage.num\x1b[m\x1b[K << "\'");\n'}
[2.359889] (cpp_pubsub) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K~~~~~~~~~~~~~~~\x1b[m\x1b[K \x1b[01;31m\x1b[K^~\x1b[m\x1b[K \x1b[34m\x1b[K~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.359936] (cpp_pubsub) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K|\x1b[m\x1b[K                          \x1b[34m\x1b[K|\x1b[m\x1b[K\n'}
[2.359984] (cpp_pubsub) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[Kconst char [14]\x1b[m\x1b[K            \x1b[34m\x1b[Ktutorial_interfaces::msg::Num_<std::allocator<void> >::_num_type {aka long int}\x1b[m\x1b[K\n'}
[2.446234] (-) TimerEvent: {}
[2.546648] (-) TimerEvent: {}
[2.566705] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[2.566986] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[2.567145] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[2.567240] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[2.567360] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[2.567477] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22\x1b[m\x1b[K,\n'}
[2.567604] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38\x1b[m\x1b[K,\n'}
[2.567721] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[2.567843] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[2.567968] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172\x1b[m\x1b[K:\n'}
[2.568503] (cpp_pubsub) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT) \x1b[35m\x1b[K[with CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>; MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.569015] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::\x1b[01;32m\x1b[Kcreate_subscription_factory\x1b[m\x1b[K(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.569157] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.569254] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.569569] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.569957] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/subscriber_lambda.cpp:32:63:\x1b[m\x1b[K   required from here\n'}
[2.570521] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp:396:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void>, false, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<tutorial_interfaces::msg::Num_<std::allocator<void> >, MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >&)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[2.571025] (cpp_pubsub) StderrLine: {'line': b'  396 |     \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[2.571084] (cpp_pubsub) StderrLine: {'line': b'      |     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.571134] (cpp_pubsub) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/client.hpp:29\x1b[m\x1b[K,\n'}
[2.571181] (cpp_pubsub) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K:\n'}
[2.571237] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Types = {std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.571317] (cpp_pubsub) StderrLine: {'line': b' 1494 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[2.571366] (cpp_pubsub) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.571413] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1494:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[2.571461] (cpp_pubsub) StderrLine: {'line': b'/usr/include/c++/13/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using std::variant<_Types>::__accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > \x1b[35m\x1b[K[with _Tp = std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.571560] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1490:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(_Tp&&) \x1b[35m\x1b[K[with _Tp = std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >&)>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.571687] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp:396:23:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT) \x1b[35m\x1b[K[with CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>; MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.571740] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::\x1b[01;32m\x1b[Kcreate_subscription_factory\x1b[m\x1b[K(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.571796] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.571855] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.571938] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.575278] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/subscriber_lambda.cpp:32:63:\x1b[m\x1b[K   required from here\n'}
[2.575350] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1407:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.575404] (cpp_pubsub) StderrLine: {'line': b' 1407 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[2.575452] (cpp_pubsub) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.575513] (cpp_pubsub) StderrLine: {'line': b'/opt/ros/jazzy/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::\x1b[01;32m\x1b[Kset\x1b[m\x1b[K(CallbackT) \x1b[35m\x1b[K[with CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>; MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.575567] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/subscription_factory.hpp:93:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::\x1b[01;32m\x1b[Kcreate_subscription_factory\x1b[m\x1b[K(CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<topic_statistics::SubscriptionTopicStatistics>) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.575628] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:121:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(NodeParametersT&, NodeTopicsT&, const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.575690] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/create_subscription.hpp:190:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(NodeT&, const std::string&, const QoS&, CallbackT&&, const SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; NodeT = Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.575739] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/jazzy/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::\x1b[01;32m\x1b[Kcreate_subscription\x1b[m\x1b[K(const std::string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) \x1b[35m\x1b[K[with MessageT = tutorial_interfaces::msg::Num_<std::allocator<void> >; CallbackT = MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>&; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<tutorial_interfaces::msg::Num_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.575786] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/home/liror/ros2_ws/src/cpp_pubsub/src/subscriber_lambda.cpp:32:63:\x1b[m\x1b[K   required from here\n'}
[2.575830] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(const std::variant<_Types>&) \x1b[35m\x1b[K[with _Types = {std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.575893] (cpp_pubsub) StderrLine: {'line': b' 1430 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[2.575938] (cpp_pubsub) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.575982] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1430:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<tutorial_interfaces::msg::Num_<std::allocator<void> >, MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >&)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.576069] (cpp_pubsub) StderrLine: {'line': b' 1430 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[2.576155] (cpp_pubsub) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.576206] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::\x1b[01;32m\x1b[Koperator=\x1b[m\x1b[K(std::variant<_Types>&&) \x1b[35m\x1b[K[with _Types = {std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.576262] (cpp_pubsub) StderrLine: {'line': b' 1431 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[2.576306] (cpp_pubsub) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[2.576351] (cpp_pubsub) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/13/variant:1431:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<tutorial_interfaces::msg::Num_<std::allocator<void> >, MinimalSubscriber::MinimalSubscriber()::<lambda(tutorial_interfaces::msg::Num_<std::allocator<void> >::UniquePtr&)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >&)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&)>, std::function<void(const tutorial_interfaces::msg::Num_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> >, std::default_delete<tutorial_interfaces::msg::Num_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const tutorial_interfaces::msg::Num_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<tutorial_interfaces::msg::Num_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.576414] (cpp_pubsub) StderrLine: {'line': b' 1431 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[2.576462] (cpp_pubsub) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[2.647840] (-) TimerEvent: {}
[2.749891] (-) TimerEvent: {}
[2.850299] (-) TimerEvent: {}
[2.951585] (-) TimerEvent: {}
[3.053535] (-) TimerEvent: {}
[3.159136] (-) TimerEvent: {}
[3.260113] (-) TimerEvent: {}
[3.361733] (-) TimerEvent: {}
[3.455413] (cpp_pubsub) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/talker.dir/build.make:76: CMakeFiles/talker.dir/src/publisher_lambda_function.cpp.o] Error 1\n'}
[3.456018] (cpp_pubsub) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/talker.dir/all] Error 2\n'}
[3.456292] (cpp_pubsub) StderrLine: {'line': b'gmake[1]: *** Waiting for unfinished jobs....\n'}
[3.461882] (-) TimerEvent: {}
[3.563404] (-) TimerEvent: {}
[3.664033] (-) TimerEvent: {}
[3.766278] (-) TimerEvent: {}
[3.868178] (-) TimerEvent: {}
[3.970045] (-) TimerEvent: {}
[3.992923] (cpp_pubsub) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/listener.dir/build.make:76: CMakeFiles/listener.dir/src/subscriber_lambda.cpp.o] Error 1\n'}
[3.993907] (cpp_pubsub) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/listener.dir/all] Error 2\n'}
[3.994064] (cpp_pubsub) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[3.995979] (cpp_pubsub) CommandEnded: {'returncode': 2}
[4.005392] (cpp_pubsub) JobEnded: {'identifier': 'cpp_pubsub', 'rc': 2}
[4.016586] (-) EventReactorShutdown: {}
